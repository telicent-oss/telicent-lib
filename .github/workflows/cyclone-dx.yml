on:
  push:
    branches-ignore:
      - "main"
  workflow_dispatch:



jobs:
  generate_sbom:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: >-
        python3 -m pip install build --user

    - name: Build a binary wheel and a source tarball
      run: python3 -m build

    - name: Prepare pip and and pip-tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install pip-tools

    - name: Generate requirements
      run: |
        python -m piptools compile --extra dev -o requirements.txt pyproject.toml
        pip install -r requirements.txt#  

    - name: Generate SBOM
      run: |
        python -m cyclonedx_py environment > cyclonedx.json

#    scan:
#    runs-on: ubuntu-latest
#    permissions:
#      id-token: write
#      contents: read
#    steps:
#      - name: Trivy Vulnerability Scan
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: "sbom"
#          image-ref: ${{ inputs.IMAGE_REF }}
#          output: trivy-docker-report.json
#          format: json
#          exit-code: 0
#  run_high_risk_vulnerability_scanner:
#    needs:
#      - generate_bom
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ github.run_number }}-sbom.json
#      - name: Run Scan
#        uses: aquasecurity/trivy-action@master
#        with:
#          exit-code: '1'
#          format: 'table'
#          severity: 'HIGH,CRITICAL'
#          ignore-unfixed: true
#          input: ${{ github.run_number }}-sbom.json
#          scan-type: 'sbom'
